/*Q1. We want to understand more about the movies that families are watching. The following categories are considered family movies: Animation, Children, Classics, Comedy, Family and Music.
Create a query that lists each movie, the film category it is classified in, and the number of times it has been rented out.*/

WITH sub AS (SELECT *
            FROM category c
            JOIN film_category fc
            ON fc.category_id = c.category_id
            JOIN film f
            ON f.film_id = fc.film_id
            JOIN inventory i
            ON f.film_id = i.film_id
            JOIN rental r
            ON i.inventory_id = r.inventory_id
            WHERE c.name IN ('Animation','Children','Classics','Comedy','Family','Music'))

SELECT title AS film_title, name AS category_name, COUNT(*) AS count_of_rentals
FROM sub
GROUP BY 1, 2
ORDER BY 2, 1, 3 DESC;

/*Q2. Now we need to know how the length of rental duration of these family-friendly movies compares to the duration that all movies are rented for. Can you provide a table with the movie
titles and divide them into 4 levels (first_quarter, second_quarter, third_quarter, and final_quarter) based on the quartiles (25%, 50%, 75%) of the rental duration for movies across all
categories? Make sure to also indicate the category that these family-friendly movies fall into.*/

SELECT f.title film_title,
       c.name category_name,
       f.rental_duration AS rental_duration,
       NTILE(4) OVER (ORDER BY f.rental_duration) AS standard_quartile
FROM film f
JOIN film_category fc
  ON f.film_id = fc.film_id
JOIN category c
  ON c.category_id = fc.category_id
WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')
GROUP BY 1, 2, 3
ORDER BY 3;

/*Q3. Finally, provide a table with the family-friendly film category, each of the quartiles, and the corresponding count of movies within each combination of film category for each
corresponding rental duration category. The resulting table should have three columns:

       Category
       Rental length category
       Count*/

SELECT category_name,
       standard_quartile,
       COUNT(*)
FROM (SELECT c.name category_name,
       NTILE(4) OVER (ORDER BY f.rental_duration) AS standard_quartile
       FROM film f
       JOIN film_category fc
       ON f.film_id = fc.film_id
       JOIN category c
       ON c.category_id = fc.category_id
       WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')) sub
GROUP BY 1, 2
ORDER BY 1, 2;

/*Q4. We want to find out how the two stores compare in their count of rental orders during every month for all the years we have data for. Write a query that returns the store ID for the
store, the year and month and the number of rental orders each store has fulfilled for that month. Your table should include a column for each of the following: year, month, store ID and
count of rental orders fulfilled during that month.*/

SELECT DATE_PART('month', rental_date) rental_month,
       DATE_PART('year', rental_date) rental_year,
       s.store_id,
       COUNT(*)
FROM rental r
JOIN payment p
  ON p.rental_id = r.rental_id
JOIN staff sf
  ON sf.staff_id = p.staff_id
JOIN store s
  ON s.store_id = sf.store_id
GROUP BY 1, 2, 3
order by 4 DESC;
